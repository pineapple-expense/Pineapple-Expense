name: Test and Deploy Pineapple Backend

on:
  push:
    branches: [ main ]
#    paths:
#      - 'AWS/src/**'
#      - 'AWS/template.yaml'
#      - 'AWS/tests/**'
#      - '.github/workflows/AWS_Test+Deploy.yml'

jobs:
  test:
    name: Run API Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest requests boto3 pytest-dependency==0.6.0
          
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
        
      - name: Run API tests
        env:
          AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
          AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
          AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
          AUTH0_TEST_USERNAME: ${{ secrets.AUTH0_TEST_USERNAME }}
          AUTH0_TEST_PASSWORD: ${{ secrets.AUTH0_TEST_PASSWORD }}
          AUTH0_AUDIENCE: ${{ secrets.AUTH0_AUDIENCE }}
          AWS_REGION: ${{ secrets.AWS_REGION || 'us-east-1' }}
          BUCKET: ${{ secrets.BUCKET }}
        run: pytest AWS/tests/

  deploy:
    name: Deploy Stack to AWS
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    env:
      AWS_REGION: ${{ secrets.AWS_REGION || 'us-east-1' }}
      STACK_NAME: ${{ secrets.STACK_NAME || 'pineapple-2lambdas' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install AWS SAM CLI
        run: pip install aws-sam-cli

      - name: Validate SAM template
        run: sam validate --template AWS/template.yaml

      - name: Deploy to stack
        run: |
          sam deploy --template-file AWS/template.yaml \
                     --stack-name $STACK_NAME \
                     --capabilities CAPABILITY_IAM \
                     --no-confirm-changeset \
                     --no-fail-on-empty-changeset
